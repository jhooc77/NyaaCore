import java.nio.charset.StandardCharsets

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'io.papermc.paperweight.userdev' version '1.5.6'
    id 'xyz.jpenilla.run-paper' version '1.1.0' // Adds runServer and runMojangMappedServer tasks for testing
    //https://repo.papermc.io/#browse/search=keyword%3Dio.papermc.paperweight.userdev:maven-snapshots%3Aio.papermc.paperweight.userdev%3Aio.papermc.paperweight.userdev.gradle.plugin%3A1.3.10-SNAPSHOT
}


ext.pluginNameUpper = "NyaaCore"
ext.pluginNameLower = ext.pluginNameUpper.toLowerCase()

ext.majorVersion = 9
ext.minorVersion = 5
ext.minecraftVersion = "1.19.4"


// Supplied by Jenkins
ext.buildNumber = System.env.BUILD_NUMBER == null ? "x" : "$System.env.BUILD_NUMBER"
ext.mavenDirectory = System.env.MAVEN_DIR == null ? "$projectDir/repo" : "$System.env.MAVEN_DIR"
ext.jdDirectory = System.env.JAVADOCS_DIR == null ? null : "$System.env.JAVADOCS_DIR"

// Version used for distribution. Different from maven repo
group = "cat.nyaa"
//archivesBaseName = "${pluginNameUpper}-mc$minecraftVersion"
version = "$majorVersion.$minorVersion.$buildNumber".toString()

// extra compile warnings
compileJava {
    options.compilerArgs += ["-Xlint:deprecation"]
    options.encoding = StandardCharsets.UTF_8.name()
    options.release.set(17)
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(17))
    withJavadocJar()
    withSourcesJar()
}

assemble {
    dependsOn(reobfJar)
}

repositories {
    mavenCentral()
    maven { name 'Bugjang'; url 'https://libraries.minecraft.net' }
    maven { name 'Spigot'; url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { name 'Sonatype'; url 'https://oss.sonatype.org/content/groups/public' }
    maven { name "essentialsx-releases"; url "https://repo.essentialsx.net/releases/" }
    maven { name "papermc"; url "https://papermc.io/repo/repository/maven-public/" }
    maven { name 'NyaaCat'; url 'https://ci.nyaacat.com/maven/' }
}

dependencies {
    paperweightDevelopmentBundle("io.papermc.paper:dev-bundle:$minecraftVersion-R0.1-SNAPSHOT")
    // other plugins
    compileOnly('net.essentialsx:EssentialsX:2.19.6')      // soft dep
    compileOnly 'org.jetbrains:annotations:23.0.0'
    // Testing
    testImplementation(platform('org.junit:junit-bom:5.9.0'))
    testImplementation('org.junit.jupiter:junit-jupiter')
//    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.github.seeseemelk:MockBukkit-v1.19:2.29.0'
    testImplementation 'org.mockito:mockito-core:5.4.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.4.0'
    testImplementation 'org.xerial:sqlite-jdbc:3.39.3.0'
    testImplementation 'ch.vorburger.mariaDB4j:mariaDB4j:2.6.0'
}

processResources { // modify version string
    filteringCharset = StandardCharsets.UTF_8.name()
    filesMatching("**/plugin.yml") {
        expand 'version': project.version
    }
    filesMatching("**/MCVersion") {
        expand 'minecraftVersion': project.minecraftVersion
    }
}

reobfJar{
    outputJar.set(layout.buildDirectory.file("libs/${pluginNameUpper}-mc${minecraftVersion}-${project.version}.jar"))
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            afterEvaluate{
                group project.group
                artifactId pluginNameLower
                version "$majorVersion.$minorVersion.$buildNumber-SNAPSHOT"
            }
        }
    }
    repositories {
        maven {
            url mavenDirectory
        }
    }
}

javadoc {
    // javadoc output folder
    if (project.jdDirectory != null) destinationDir = file("${jdDirectory}/${pluginNameLower}-${version}")

    (options as StandardJavadocDocletOptions).with {
        links 'https://docs.oracle.com/en/java/javase/16/docs/api/'
        //links 'https://hub.spigotmc.org/javadocs/spigot/'
        links 'https://guava.dev/releases/21.0/api/docs/'
        links 'https://ci.md-5.net/job/BungeeCord/ws/chat/target/apidocs/'
        options.locale = 'en_US'
        options.encoding = 'UTF-8'
        options.addBooleanOption('keywords', true)
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addBooleanOption('html5', true)
        options.windowTitle = "${pluginNameUpper} Javadoc"
    }
}
